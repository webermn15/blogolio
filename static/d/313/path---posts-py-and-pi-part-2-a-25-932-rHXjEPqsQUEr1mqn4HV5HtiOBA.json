{"data":{"markdownRemark":{"html":"<p>If you haven't yet, please check out <a href=\"https://websdev.io/posts/a-usb-controller-py-and-pi/\">part one</a> of this little two part blog post for context on this post! :)</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre style=\"counter-reset: linenumber 0\" class=\"language-py line-numbers\"><code class=\"language-py\">import time\nimport threading\nimport struct\nfrom pykeyboard import PyKeyboard\n\nkb = PyKeyboard()\n\nfile_path = &quot;/dev/input/js0&quot;\nevent_size = struct.calcsize(&quot;LhBB&quot;)\n\n\ndef check_scroll(data):\n    (value, itype, number) = data\n    if itype == 2 and number == 2:\n        if value &gt; 0:\n            kb.press_keys([&#39;Control_L&#39;, &#39;Right&#39;])\n        if value &lt; 0:\n            kb.press_keys([&#39;Control_L&#39;, &#39;Left&#39;])\n    if itype == 2 and number == 1:\n        if value &gt; 0:\n            kb.press_keys([&#39;Control_L&#39;, &#39;Down&#39;])\n        if value &lt; 0:\n            kb.press_keys([&#39;Control_L&#39;, &#39;Up&#39;])\n    elif itype == 1 and number == 0:\n        if value == 1:\n            kb.press_key(&#39;Up&#39;)\n        if value == 0:\n            kb.release_key(&#39;Up&#39;)\n    elif itype == 1 and number == 1:\n        if value == 1:\n            kb.press_key(&#39;Down&#39;)\n        if value == 0:\n            kb.release_key(&#39;Down&#39;)\n\n\nclass ControllerPoller (threading.Thread):\n    def __init__(self, path, calcsize):\n        threading.Thread.__init__(self)\n        self.path = path\n        self.calcsize = calcsize\n        self.value = 0\n        self.itype = 0\n        self.number = 0\n\n    def run(self):\n        portal = open(self.path, &quot;rb&quot;)\n        event = portal.read(self.calcsize)\n        while event:\n            (msec, value, itype, number) = struct.unpack(&quot;LhBB&quot;, event)\n            self.value = value\n            self.itype = itype\n            self.number = number\n            event = portal.read(self.calcsize)\n\n    def get_info(self):\n        return (self.value, self.itype, self.number)\n\n\npoll_usb = ControllerPoller(file_path, event_size)\n\npoll_usb.start()\n\nwhile True:\n    check_scroll(poll_usb.get_info())\n    time.sleep(0.025)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"date":"January 17, 2019","title":"Py and Pi, part 2","author":"Webs"}}},"pageContext":{}}