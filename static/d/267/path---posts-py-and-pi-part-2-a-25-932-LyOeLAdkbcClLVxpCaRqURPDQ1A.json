{"data":{"markdownRemark":{"html":"<p>If you haven't yet, please check out <a href=\"https://websdev.io/posts/a-usb-controller-py-and-pi/\">part one</a> of this little two part blog post for context on this post! :)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber 0\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> threading\n<span class=\"token keyword\">import</span> struct\n<span class=\"token keyword\">from</span> pykeyboard <span class=\"token keyword\">import</span> PyKeyboard\n\nkb <span class=\"token operator\">=</span> PyKeyboard<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"/dev/input/js0\"</span>\nevent_size <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>calcsize<span class=\"token punctuation\">(</span><span class=\"token string\">\"LhBB\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">check_scroll</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> itype<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> data\n    <span class=\"token keyword\">if</span> itype <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">and</span> number <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            kb<span class=\"token punctuation\">.</span>press_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Control_L'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Right'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            kb<span class=\"token punctuation\">.</span>press_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Control_L'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Left'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> itype <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">and</span> number <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            kb<span class=\"token punctuation\">.</span>press_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Control_L'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Down'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            kb<span class=\"token punctuation\">.</span>press_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Control_L'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Up'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> itype <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> number <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            kb<span class=\"token punctuation\">.</span>press_key<span class=\"token punctuation\">(</span><span class=\"token string\">'Up'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            kb<span class=\"token punctuation\">.</span>release_key<span class=\"token punctuation\">(</span><span class=\"token string\">'Up'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> itype <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> number <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            kb<span class=\"token punctuation\">.</span>press_key<span class=\"token punctuation\">(</span><span class=\"token string\">'Down'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            kb<span class=\"token punctuation\">.</span>release_key<span class=\"token punctuation\">(</span><span class=\"token string\">'Down'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ControllerPoller</span> <span class=\"token punctuation\">(</span>threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> calcsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> path\n        self<span class=\"token punctuation\">.</span>calcsize <span class=\"token operator\">=</span> calcsize\n        self<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>itype <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>number <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        portal <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span>\n        event <span class=\"token operator\">=</span> portal<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>calcsize<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> event<span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">(</span>msec<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> itype<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">\"LhBB\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value\n            self<span class=\"token punctuation\">.</span>itype <span class=\"token operator\">=</span> itype\n            self<span class=\"token punctuation\">.</span>number <span class=\"token operator\">=</span> number\n            event <span class=\"token operator\">=</span> portal<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>calcsize<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_info</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>itype<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span>\n\n\npoll_usb <span class=\"token operator\">=</span> ControllerPoller<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> event_size<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    poll_usb<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        check_scroll<span class=\"token punctuation\">(</span>poll_usb<span class=\"token punctuation\">.</span>get_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.025</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"date":"January 17, 2019","title":"Py and Pi, part 2","author":"Webs"}}},"pageContext":{}}